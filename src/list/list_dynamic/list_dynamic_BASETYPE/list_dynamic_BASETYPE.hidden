#ifndef _LISTA_DYNAMIC_BASETYPE_HIDDEN
#define _LISTA_DYNAMIC_BASETYPE_HIDDEN

#include "../../../util/defines_typedef.h"

/* FUNZIONAMENTO
 * E' la versione piu' "classica" della lista. Ogni elemento (spiegato meglio
 * dopo nel typedef) contiene il valore da salvare e l'indirizzo all'elemento
 * successivo.
 * C'e' quindi solo un piccolo overhead dovuto al puntatore all'elemento successivo
 * per ogni elemento della lista.
 *
 * L'ultimo elemento della lista e' contrassegnato da un NULL come pnext
 * */


/* elem_BASETYPE:  ciascun elemento di cui e' costituita la lista
 * val:            valore salvato nella lista
 * pnext:          indirizzo all'elemento successivo della lista
 * */
typedef struct _elem_BASETYPE {
  BASETYPE_SPACE        val;
  struct _elem_BASETYPE *pnext;
 } elem_BASETYPE;

typedef elem_BASETYPE* pelem_BASETYPE;

/* list_dynamic_BASETYPE: struttura che contiene le informazioni sulla lista
 * pstart:               indirizzo del primo elemento della lista
 * pend:                 indirizzo dell'ultimo elemento della lista
 * n_elem:               numero di elementi contenuti nella lista
 * */
typedef struct _list_dynamic_BASETYPE {
  pelem_BASETYPE pstart;
  pelem_BASETYPE pend;
  unsi n_elem;
 } list_dynamic_BASETYPE;
typedef list_dynamic_BASETYPE* plist_dynamic_BASETYPE;

#endif
