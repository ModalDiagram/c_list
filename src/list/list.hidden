#ifndef _LIST_HIDDEN
#define _LIST_HIDDEN

#include "../util/defines_typedef.h"
#include "./list.h"

#define CREA_ARRAY(nome_funz) \
 type_##nome_funz nome_funz##_arr[]={ nome_funz##_dynamic_char,         \
                                      nome_funz##_dynamic_int,          \
                                      nome_funz##_dynamic_float,        \
                                      nome_funz##_dynamic_double,       \
                                      nome_funz##_dynamic_long,        \
                                      nome_funz##_dynamic_pvoid,        \
                                      nome_funz##_dynamic_array_char,   \
                                      nome_funz##_dynamic_array_int,    \
                                      nome_funz##_dynamic_array_float,  \
                                      nome_funz##_dynamic_array_double, \
                                      nome_funz##_dynamic_array_long,  \
                                      nome_funz##_dynamic_array_pvoid,  \
                                      nome_funz##_dynamic_generic,      \
                                      nome_funz##_table_char,           \
                                      nome_funz##_table_int,            \
                                      nome_funz##_table_float,          \
                                      nome_funz##_table_double,         \
                                      nome_funz##_table_long,          \
                                      nome_funz##_table_pvoid,          \
                                      nome_funz##_table_array_char,     \
                                      nome_funz##_table_array_int,      \
                                      nome_funz##_table_array_float,    \
                                      nome_funz##_table_array_double,   \
                                      nome_funz##_table_array_long,    \
                                      nome_funz##_table_array_pvoid,    \
                                      nome_funz##_table_generic,};

#define CREA_ARRAY_TABLE(nome_funz) \
 type_##nome_funz nome_funz##_arr[]={ nome_funz##_table_char,           \
                                      nome_funz##_table_int,            \
                                      nome_funz##_table_float,          \
                                      nome_funz##_table_double,         \
                                      nome_funz##_table_long,          \
                                      nome_funz##_table_pvoid,          \
                                      nome_funz##_table_array_char,     \
                                      nome_funz##_table_array_int,      \
                                      nome_funz##_table_array_float,    \
                                      nome_funz##_table_array_double,   \
                                      nome_funz##_table_array_long,    \
                                      nome_funz##_table_array_pvoid,    \
                                      nome_funz##_table_generic,};

/* lista
 * plista: puntatore alla lista
 * tstk:   tipo di lista
 * */
typedef struct _my_list {
  pvoid      plist;
  type_list  tlist;
 } my_list;

typedef my_list* pmy_list;

/* type_data: tipo di dato che la lista contiene.
 *
 * Nel caso di type_data_array_* la lunghezza di ciascun array e' fornita al momento
 * dell'inserimento nella lista e restituita all'estrazione dalla lista.
 *
 * Nel caso di type_data_generic il dato e' individuato da un pvoid, il suo indirizzo,
 * e un unsi, la sua size.
 * */
typedef enum{
  type_dynamic_char         =0,
  type_dynamic_int          =1,
  type_dynamic_float        =2,
  type_dynamic_double       =3,
  type_dynamic_long         =4,
  type_dynamic_pvoid        =5,
  type_dynamic_array_char   =6,
  type_dynamic_array_int    =7,
  type_dynamic_array_float  =8,
  type_dynamic_array_double =9,
  type_dynamic_array_long   =10,
  type_dynamic_array_pvoid  =11,
  type_dynamic_generic      =12, /* deve essere l'ultimo dei tipi con lista dinamica */

  type_table_char           =13,
  type_table_int            =14,
  type_table_float          =15,
  type_table_double         =16,
  type_table_long           =17,
  type_table_pvoid          =18,
  type_table_array_char     =19,
  type_table_array_int      =20,
  type_table_array_float    =21,
  type_table_array_double   =22,
  type_table_array_long     =23,
  type_table_array_pvoid    =24,
  type_table_generic        =25,
 } type_list_data;

// puntatori a fuzioni, utilizzati per generalizzare l'oggetto list
typedef pvoid (*type_malloc_list)(unsi dim_array);
typedef pvoid (*type_malloc_list_specify_table)(unsi dim_array, type_resize type_resize, unsi dim_table);
typedef int (*type_change_resize_table)(pvoid plist, type_resize type_resize);
typedef int (*type_resize_table)(pvoid plist, unsi n_entries);
typedef int (*type_get_info_table)(pvoid plist, punsi pn_entries, punsi pn_occupied);
typedef void (*type_free_list)(pvoid plist);
typedef int (*type_insert_first)(pvoid plist, all_type value, unsi size);
typedef int (*type_extract_first)(pvoid plist, all_type pvalue, punsi psize);
typedef int (*type_insert_last)(pvoid plist, all_type value, unsi size);
typedef int (*type_extract_last)(pvoid plist, all_type pvalue, punsi psize);
typedef int (*type_insert_nth)(pvoid plist, all_type value, unsi size, unsi n);
typedef int (*type_extract_nth)(pvoid plist, all_type pvalue, punsi psize, unsi n);
typedef int (*type_search_first)(pvoid plist,
                                 all_type value_searched, unsi  size_searched,
                                 all_type pvalue_found,   punsi psize_found,
                                 pcustom_compare pinput_compare);
typedef int (*type_print_list)(pvoid plist, pcustom_print pinput_print);

/* Altre funzioni ausiliarie: */
type_list_data find_type(type_list type_list, pchar type_string, unsi dim_array);

#endif
